# Makefile for OS project
# To build, first `make dep`, them `make`. Everything should be automatic.
# Will compile all *.c and *.S files in the current directory.

EXES = assemble

# Flags to use when compiling, preprocessing, assembling, and linking
CXX = g++
WARNINGS = -Wchar-subscripts -Wparentheses -Wreturn-type -Wmissing-braces -Wundef -Wshadow
CXX_OPTS = -c -g -O0 -Wfatal-errors -Werror $(WARNINGS)

#If you have any .h files in another directory, add -I<dir> to this line
#CPPFLAGS +=-nostdinc -g

# This generates the list of source files
SRC =  $(wildcard *.cpp)

# This generates the list of .o files. The order matters, boot.o must be first
OBJ_FILES = $(addprefix obj/,$(notdir $(CPP_FILES:.cpp=.o)))

$(EXES): $(OBJ_FILES)
	$(CXX) -o $@ $^

obj/%.o: %.cpp
	$(CXX) $(CXX_OPTS) -o $@ $<

.PHONY: all clean tidy

all: $(EXES)

clean:
	-rm *.o $(EXES) 2>/dev/null


